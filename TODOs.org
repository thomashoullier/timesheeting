:PROPERTIES:
:CATEGORY: timesheeting
:END:
#+title: TODO

* Specification
** DONE Make the specification into a latex document
CLOSED: [2024-01-21 Sun 22:12]
ADDED: <2024-01-20 Sat>

We want to be able to publish signed revisions of it.
+ OK Add a document reference to it.
+ OK Add an applicable documents table to it.
+ OK Number requirements
+ OK Add rationale for some requirements.
+ OK Complete the definition list.
  + OK UI screen
  + OK save profile?
+ OK Add list of acronyms

** DONE Publication of PRJ1-SPE1-v1.0
CLOSED: [2024-01-23 Tue 20:22]
+ OK Sign the pdf with gpg.
+ OK Tag the relevant commit.
+ OK Publish as a release on github.
+ OK Publish on personal website.

** TODO Specification items to add in v2
We list the specification items which should be added later.
+ Which day of the week is the first day?
+ First day of the week user configuration?
+ On which day does the daily entries screen open by default?
+ On which week does the weekly report open by default?
+ Default values of entry metadata when left unspecified.
+ What should happen when the software detects that the save data
  is corrupted using the mechanism specified by R-QUA-020?
+ Template list of tasks for new projects.
+ Maintenance, bug reporting and persistent reports, non-regression.
+ Language of the interface: English.
+ Indicate to the user at runtime where to report bugs.
+ Specify the format in which the software is released.
  As source, plus appimage?

* System architecture document

** DONE Drafting PRJ1-SAD1-v1.0
CLOSED: [2024-02-11 Sun 10:50]
ADDED: [2024-01-24 Wed]
+ Decompose the system into subsystems.
+ Describe also the build process, interaction with the software distributor,
  and dependencies.
+ Don't propose solutions/libraries for implementing the subsystems yet,
  this is the role of the design document.
+ Must include a matrix dispatching the requirements to subsystems.
+ See 'embedded database' for the database subsystem.
+ Provide justification for the architecture choice, in particular why
  a web app is not made.

* Subsystem requirements document
** PRJ1-SRS1
Details the requirements applicable to subsystems, as described in the SAD.

* System Design document
** PRJ1-SDD1
Proposes the implementations of the subsystems, along with a
justification/tradeoff.
+ List the libraries used to implement every subsystem.
+ List the license of all the tools being used.
+ Propose very abstract drawings for the UI screens.
+ Detail every possible user interaction and how it propagates through
  subsystems. This defines some of the required interfaces between subsystems.
+ Detail the database schema

* Test plan
Details every tests used to check the software.
+ Include manual GUI tests.
+ Include unit tests of the core logic.
+ Indicate which tests condition the acceptance of a version.

* Repository documentation
** TODO Add a documentation tree
We need to synthesize the list of documentation available. Perhaps do it
directly in the project readme.
+ We can do a graphviz of all documentation and software. We can show every version
  and the "Applicable documents" links between them.

** DONE Add a project timeline
CLOSED: [2024-01-23 Tue 19:59]
Add to the README a project timeline with the dates of release of the
documents and software.

* Software
** GTK
We use GTK4 with gtkmm, the C++ bindings.
See the documentation: https://developer-old.gnome.org/gtkmm-tutorial/stable/index-info.html.en

** TODO Draft the GUI
Reach a point where every main UI screen is present. Individual dialogs will be
implemented later.
+ Main UI with tabs and toolbar.
+ About dialog
+ Tabs:
  + Daily entries
  + Hierarchy items
  + Project totals
  + Weekly report
  + Export tool
