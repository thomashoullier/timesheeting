#+title: Timesheeting specification

* Introduction
This is a need and specification document for the ~timesheeting~ software.

A *timesheet software* is, in the present context, software used to establish
a table of hours worked, per project and per task. The timesheets are then used
to manage personal time, for work or leisure. As such the tool must provide
reports about the timesheets.

** Motivation for the present development
We used to use ~titra~, but found it slightly too bloated for us.
We are also wary of deploying this kind of software to online VPS,
as it the data could be sensitive.

In addition, there are features we want to implement, tailor-made for us.

* Applicable documents
AD1: external spreadsheet format for daily totals

* Definitions

+ Timesheet: a collection of entries in a given time period.
+ Hierarchy items: Company/project/task
+ Active (hierarchy) items: the list of items which are proposed
  to the user for creating and editing time entries.
+ Entry (elementary component of a timesheet)
+ Places: places where we work.
+ Critical time periods: day, week, month, year
+ Stopwatch

* Requirements

** User interface: data
*** Adding hierarchy items
The software shall allow the addition of hierarchy items to the
active items.

*** Removing hierarchy items
The software shall allow the removal of hierarchy items from the
active items.

*** Edit hierarchy items
The software shall allow the edition of the properties of hierarchy
items in the active items.

Note the changes do not backpropagate in the past entries.

*** Adding entries
The software shall allow the addition of new entries.

*** Adding through stopwatch
The addition of entries shall be possible through a start/stop clock
interface. The entry is saved to memory when the clock stops.

*** Adding entries manually
The addition of entries shall be possible by manually filling in the
duration.

*** Remove entries
The software shall allow the removal of past entries.

*** Edit entries
The software shall allow the edition of all past entries properties.

** User interface
*** Daily entries
The screen which implements the addition of entries shall also report
the past entries of the day, displaying the project, task and duration
of these entries.

*** Running daily total
The entry addition screen shall report the running total duration worked
this day.

*** Clock in use
The software shall display a signal that the stopwatch is running.

*** Running clock time
When the stopwatch is running, the current running duration shall
be displayed.

*** Entry metadata prefill
Each field of metadata during entry creation and edition shall
be pre-filled with the metadata from the latest entry of the day,
if any.

*** Entry metadata suggestion
Each field of metadata during entry creation and edition shall
be fillable through a short list of suggestions from the 5 latest
entries.

*** Entry metadata hierarchy search
The list of active hierarchy items shall be searchable in the
entry metadata fields when creating or editing an entry.

*** Entry metadata hierarchy coherence
When adding or editing an entry, the software shall refuse
non-existent hierarchy items as metadata values.

*** Display current active hierarchy items
The currently active hierarchy items shall be displayed on a dedicated
screen. This display lists all active tasks per project.

** Data content
*** Entry dates
The entries shall contain the start and stop dates.

*** Entry metadata
Any entry shall be associated unambiguously to
+ a unique task,
+ a unique project,
+ a unique company,
+ a unique place.

*** Company identification
The company objects shall be identified by a short hand of their name.

*** Company metadata
A company will be associated unambiguously to its:
+ Full name

*** Project identification
The project object shall be identified by a globally unique number.

*** Project metadata
A project will be associated unambiguously to its:
+ Full name
+ Company

*** Task identification
The tasks shall be identified with a globally unique number.

*** Task metadata
A task shall be associated unambiguously to its:
+ Full name
+ Project

** Time
*** Time resolution
The resolution for dates and durations shall be the second.

*** Time reference
The datation system shall have the current system clock as reference.

** Data management
*** Save
The software shall save timesheets on the system's long-term storage.

*** Transparent save
The saving of timesheets shall be transparent and real-time to the user.
Ie the user must not have to click on buttons for the save to happen.

*** Backup
The software shall allow making backups of timesheets for any time period.

*** Export
The timesheets must be exportable to a human-readable format, for
interoperability.

** Access and security
*** Single user
The software shall allow usage by a unique user.

*** Synchronization across computers
The software shall allow a means to synchronize the timesheets such
that the user can maintain a synced state across machines.

*** Company segregation
The software shall allow the segragation between companies.
This is relevant to the following:
+ Timesheets saves on long-term storage.
+ Syncing of timesheets across computers.
+ Backups
+ Exports

*** Confidentiality
The software interface and associated data shall remain local to the system.

Rationale: We want to avoid discussions of data confidentiality between
employee and employers due to the deployment type of the software.

** Performance and environment
*** Target hardware
The software shall run on a low-end computer.

Eg. a computer with an Athlon 3000G CPU.

*** Target OS
The software shall run on GNU/Linux.

*** Target graphical environment
The software shall run on the wayland compositor Hyprland.

*** Memory footprint
The maximum amount of memory used by the software shall be 100 MBytes.
The amount of memory is defined as the ~resident set size~.

** Reports
*** Project totals
The software shall provide totals for the time worked on projects within
a specified time period and a specified company.

*** Weekly report
The software shall report the daily totals of all tasks grouped by project, for
a given company and for a given week.

*** Weekly report daily totals
The weekly report shall display the daily total hours worked, summing all tasks
of all projects.

*** Weekly report weekly total
The weekly report shall display the weekly total hours worked, summing all
tasks of all projects.

*** Durations display format
In the reports, the software shall allow the display of durations either in
minutes, in hours or in days.

*** Export to external timesheet
The software shall export the tasks daily totals to a spreadsheet format
compliant with AD1.

** Versioning
*** Version report
The software shall report its current version number at runtime.
